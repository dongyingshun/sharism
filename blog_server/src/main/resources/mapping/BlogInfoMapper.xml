<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sharism.blog_server.mapper.BlogInfoMapper">
  <resultMap id="BaseResultMap" type="com.sharism.blog_server.model.BlogInfo">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="user_id" jdbcType="CHAR" property="userId" />
    <result column="sort" jdbcType="VARCHAR" property="sort" />
    <result column="blog_title" jdbcType="VARCHAR" property="blogTitle" />
    <result column="remove" jdbcType="INTEGER" property="remove" />
    <result column="publish_date" jdbcType="VARCHAR" property="publishDate" />
    <result column="draft" jdbcType="INTEGER" property="draft" />
    <result column="transpond_amount" jdbcType="INTEGER" property="transpondAmount" />
    <result column="praise_amount" jdbcType="INTEGER" property="praiseAmount" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="read_count" jdbcType="INTEGER" property="readCount" />
    <result column="privacy_set" jdbcType="INTEGER" property="privacySet" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sharism.blog_server.model.BlogInfo">
    <result column="blog" jdbcType="LONGVARCHAR" property="blog" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, sort, blog_title, remove, publish_date, draft, transpond_amount, praise_amount, 
    weight, read_count, privacy_set
  </sql>
  <sql id="Blob_Column_List">
    blog
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sharism.blog_server.model.BlogInfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_server_db
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sharism.blog_server.model.BlogInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from blog_server_db
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog_server_db
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from blog_server_db
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sharism.blog_server.model.BlogInfoExample">
    delete from blog_server_db
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sharism.blog_server.model.BlogInfo">
    insert into blog_server_db (id, user_id, sort, blog_title, 
      remove, publish_date, draft, 
      transpond_amount, praise_amount, weight, 
      read_count, privacy_set, blog
      )
    values (#{id,jdbcType=CHAR}, #{userId,jdbcType=CHAR}, #{sort,jdbcType=VARCHAR}, #{blogTitle,jdbcType=VARCHAR}, 
      #{remove,jdbcType=INTEGER}, #{publishDate,jdbcType=VARCHAR}, #{draft,jdbcType=INTEGER}, 
      #{transpondAmount,jdbcType=INTEGER}, #{praiseAmount,jdbcType=INTEGER}, #{weight,jdbcType=INTEGER}, 
      #{readCount,jdbcType=INTEGER}, #{privacySet,jdbcType=INTEGER}, #{blog,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sharism.blog_server.model.BlogInfo">
    insert into blog_server_db
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="blogTitle != null">
        blog_title,
      </if>
      <if test="remove != null">
        remove,
      </if>
      <if test="publishDate != null">
        publish_date,
      </if>
      <if test="draft != null">
        draft,
      </if>
      <if test="transpondAmount != null">
        transpond_amount,
      </if>
      <if test="praiseAmount != null">
        praise_amount,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="readCount != null">
        read_count,
      </if>
      <if test="privacySet != null">
        privacy_set,
      </if>
      <if test="blog != null">
        blog,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=CHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=VARCHAR},
      </if>
      <if test="blogTitle != null">
        #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="remove != null">
        #{remove,jdbcType=INTEGER},
      </if>
      <if test="publishDate != null">
        #{publishDate,jdbcType=VARCHAR},
      </if>
      <if test="draft != null">
        #{draft,jdbcType=INTEGER},
      </if>
      <if test="transpondAmount != null">
        #{transpondAmount,jdbcType=INTEGER},
      </if>
      <if test="praiseAmount != null">
        #{praiseAmount,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="readCount != null">
        #{readCount,jdbcType=INTEGER},
      </if>
      <if test="privacySet != null">
        #{privacySet,jdbcType=INTEGER},
      </if>
      <if test="blog != null">
        #{blog,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sharism.blog_server.model.BlogInfoExample" resultType="java.lang.Long">
    select count(*) from blog_server_db
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blog_server_db
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=VARCHAR},
      </if>
      <if test="record.blogTitle != null">
        blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.remove != null">
        remove = #{record.remove,jdbcType=INTEGER},
      </if>
      <if test="record.publishDate != null">
        publish_date = #{record.publishDate,jdbcType=VARCHAR},
      </if>
      <if test="record.draft != null">
        draft = #{record.draft,jdbcType=INTEGER},
      </if>
      <if test="record.transpondAmount != null">
        transpond_amount = #{record.transpondAmount,jdbcType=INTEGER},
      </if>
      <if test="record.praiseAmount != null">
        praise_amount = #{record.praiseAmount,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=INTEGER},
      </if>
      <if test="record.readCount != null">
        read_count = #{record.readCount,jdbcType=INTEGER},
      </if>
      <if test="record.privacySet != null">
        privacy_set = #{record.privacySet,jdbcType=INTEGER},
      </if>
      <if test="record.blog != null">
        blog = #{record.blog,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update blog_server_db
    set id = #{record.id,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=CHAR},
      sort = #{record.sort,jdbcType=VARCHAR},
      blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      remove = #{record.remove,jdbcType=INTEGER},
      publish_date = #{record.publishDate,jdbcType=VARCHAR},
      draft = #{record.draft,jdbcType=INTEGER},
      transpond_amount = #{record.transpondAmount,jdbcType=INTEGER},
      praise_amount = #{record.praiseAmount,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      read_count = #{record.readCount,jdbcType=INTEGER},
      privacy_set = #{record.privacySet,jdbcType=INTEGER},
      blog = #{record.blog,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blog_server_db
    set id = #{record.id,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=CHAR},
      sort = #{record.sort,jdbcType=VARCHAR},
      blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      remove = #{record.remove,jdbcType=INTEGER},
      publish_date = #{record.publishDate,jdbcType=VARCHAR},
      draft = #{record.draft,jdbcType=INTEGER},
      transpond_amount = #{record.transpondAmount,jdbcType=INTEGER},
      praise_amount = #{record.praiseAmount,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=INTEGER},
      read_count = #{record.readCount,jdbcType=INTEGER},
      privacy_set = #{record.privacySet,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sharism.blog_server.model.BlogInfo">
    update blog_server_db
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=VARCHAR},
      </if>
      <if test="blogTitle != null">
        blog_title = #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="remove != null">
        remove = #{remove,jdbcType=INTEGER},
      </if>
      <if test="publishDate != null">
        publish_date = #{publishDate,jdbcType=VARCHAR},
      </if>
      <if test="draft != null">
        draft = #{draft,jdbcType=INTEGER},
      </if>
      <if test="transpondAmount != null">
        transpond_amount = #{transpondAmount,jdbcType=INTEGER},
      </if>
      <if test="praiseAmount != null">
        praise_amount = #{praiseAmount,jdbcType=INTEGER},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="readCount != null">
        read_count = #{readCount,jdbcType=INTEGER},
      </if>
      <if test="privacySet != null">
        privacy_set = #{privacySet,jdbcType=INTEGER},
      </if>
      <if test="blog != null">
        blog = #{blog,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sharism.blog_server.model.BlogInfo">
    update blog_server_db
    set user_id = #{userId,jdbcType=CHAR},
      sort = #{sort,jdbcType=VARCHAR},
      blog_title = #{blogTitle,jdbcType=VARCHAR},
      remove = #{remove,jdbcType=INTEGER},
      publish_date = #{publishDate,jdbcType=VARCHAR},
      draft = #{draft,jdbcType=INTEGER},
      transpond_amount = #{transpondAmount,jdbcType=INTEGER},
      praise_amount = #{praiseAmount,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      read_count = #{readCount,jdbcType=INTEGER},
      privacy_set = #{privacySet,jdbcType=INTEGER},
      blog = #{blog,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sharism.blog_server.model.BlogInfo">
    update blog_server_db
    set user_id = #{userId,jdbcType=CHAR},
      sort = #{sort,jdbcType=VARCHAR},
      blog_title = #{blogTitle,jdbcType=VARCHAR},
      remove = #{remove,jdbcType=INTEGER},
      publish_date = #{publishDate,jdbcType=VARCHAR},
      draft = #{draft,jdbcType=INTEGER},
      transpond_amount = #{transpondAmount,jdbcType=INTEGER},
      praise_amount = #{praiseAmount,jdbcType=INTEGER},
      weight = #{weight,jdbcType=INTEGER},
      read_count = #{readCount,jdbcType=INTEGER},
      privacy_set = #{privacySet,jdbcType=INTEGER}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>