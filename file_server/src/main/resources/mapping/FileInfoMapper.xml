<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sharism.file_server.mapper.FileInfoMapper">
  <resultMap id="BaseResultMap" type="com.sharism.file_server.model.FileInfo">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="file_size" jdbcType="DOUBLE" property="fileSize" />
    <result column="upload_time" jdbcType="VARCHAR" property="uploadTime" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="delete_time" jdbcType="VARCHAR" property="deleteTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, file_name, file_path, file_type, file_size, upload_time, user_id, is_del, delete_time
  </sql>
  <select id="selectByExample" parameterType="com.sharism.file_server.model.FileInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from files_server_db
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from files_server_db
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from files_server_db
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sharism.file_server.model.FileInfoExample">
    delete from files_server_db
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sharism.file_server.model.FileInfo">
    insert into files_server_db (id, file_name, file_path, 
      file_type, file_size, upload_time, 
      user_id, is_del, delete_time
      )
    values (#{id,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{filePath,jdbcType=VARCHAR}, 
      #{fileType,jdbcType=VARCHAR}, #{fileSize,jdbcType=DOUBLE}, #{uploadTime,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}, #{deleteTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sharism.file_server.model.FileInfo">
    insert into files_server_db
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="uploadTime != null">
        upload_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=DOUBLE},
      </if>
      <if test="uploadTime != null">
        #{uploadTime,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sharism.file_server.model.FileInfoExample" resultType="java.lang.Long">
    select count(*) from files_server_db
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update files_server_db
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.filePath != null">
        file_path = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.fileType != null">
        file_type = #{record.fileType,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSize != null">
        file_size = #{record.fileSize,jdbcType=DOUBLE},
      </if>
      <if test="record.uploadTime != null">
        upload_time = #{record.uploadTime,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null">
        is_del = #{record.isDel,jdbcType=INTEGER},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update files_server_db
    set id = #{record.id,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_path = #{record.filePath,jdbcType=VARCHAR},
      file_type = #{record.fileType,jdbcType=VARCHAR},
      file_size = #{record.fileSize,jdbcType=DOUBLE},
      upload_time = #{record.uploadTime,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=INTEGER},
      delete_time = #{record.deleteTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sharism.file_server.model.FileInfo">
    update files_server_db
    <set>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=DOUBLE},
      </if>
      <if test="uploadTime != null">
        upload_time = #{uploadTime,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sharism.file_server.model.FileInfo">
    update files_server_db
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=DOUBLE},
      upload_time = #{uploadTime,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER},
      delete_time = #{deleteTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <!-- 批量删除文件信息 -->
  <!-- 参数说明 -->
  <!--
      collection:表示类型,这里参数是数组,就写成array,如果是集合,就写成list
      item  : 是一个变量名,自己随便起名
  -->
  <delete id="batchDeleteFileData" parameterType="java.lang.Integer">
    delete from files_server_db where file_path in
    <foreach item="empnoItem" collection="array" index="index" open="(" separator="," close=")">
      #{empnoItem}
    </foreach>
  </delete>

  <!--批量设置为删除状态-->
  <select id="batchDeleteFileInfo" resultType="java.lang.Integer">
    update files_server_db set is_del = 0 where file_path in
    <foreach collection="list" item="array" index="index" open="(" separator="," close=")" >
      #{item}
    </foreach>
    ORDER BY id
  </select>


</mapper>